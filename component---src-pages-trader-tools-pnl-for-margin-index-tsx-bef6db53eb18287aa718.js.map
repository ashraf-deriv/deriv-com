{"version":3,"file":"component---src-pages-trader-tools-pnl-for-margin-index-tsx-bef6db53eb18287aa718.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/trader-tools/pnl-for-margin/_pnl-margin-calculator.tsx","webpack://deriv-com/./src/pages/trader-tools/pnl-for-margin/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useState, useRef } from 'react'\nimport { Field, Formik } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport {\n    getContractSize,\n    getCurrency,\n    getPnlMarginCommon,\n    numberSubmitFormat,\n    resetValidationPnlMargin,\n    getMaxLength,\n} from '../common/_utility'\nimport {\n    financialItemLists,\n    optionItemDefault,\n    syntheticItemLists,\n} from '../common/_underlying-data'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorDropdown,\n    CalculatorForm,\n    CalculatorHeader,\n    CalculatorLabel,\n    ContentContainer,\n    FormulaText,\n    FormWrapper,\n    header_style,\n    InputGroup,\n    LinkWrapper,\n    PnlCalculatorFormMobile,\n    PnlCalculatorHeaderMobile,\n    PnLCalculatorOutputContainer,\n    PnLCalculatorOutputField,\n    PnLCalculatorOutputSymbol,\n    PnlCalculatorTabItem,\n    PnlHeaderOverflow,\n    PnLInputGroup,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapTabSelector,\n} from '../common/_style'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex, Show } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/tools/black-right-arrow.svg'\n\nconst PnlMarginCalculator = () => {\n    const query = graphql`\n        query {\n            stop_loss_level_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_pip_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-pip-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n\n    const data = useStaticQuery(query)\n    const formik_ref = useRef(null)\n    const form = formik_ref.current\n\n    const [tab, setTab] = useState('Buy')\n    const [sub_tab, setSubTab] = useState('Synthetic')\n    // These additional states have been created to track the first output (levels)\n    // from the calculator in order to rerender the second output (pips)\n    const [stop_loss_output, setStopLossOutput] = useState('0')\n    const [take_profit_output, setTakeProfitOutput] = useState('0')\n\n    const onTabClick = (t) => {\n        setTab(t)\n        if (form) {\n            form.resetForm({})\n            form.setErrors({})\n            form.setFieldValue('accountType', sub_tab === 'Synthetic' ? 'Synthetic' : 'Financial')\n            form.setFieldValue(\n                'optionList',\n                sub_tab === 'Synthetic' ? syntheticItemLists : financialItemLists,\n            )\n        }\n    }\n    const onSubTabClick = (t) => setSubTab(t)\n\n    // Watch the state of the first output, and update the second output upon change\n    // TODO: Find a cleaner solution for this\n    React.useEffect(() => {\n        if (form?.values.pointValue) {\n            form.setFieldValue(\n                'stopLossPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getStopLossPip'),\n            )\n            form.setFieldValue(\n                'takeProfitPips',\n                getPnlMarginCommon(formik_ref.current.values, 'getTakeProfitPip'),\n            )\n            // The 2 calls below is to reset the output state in order\n            // prevent the pip output from displaying NAN\n            setStopLossOutput('0')\n            setTakeProfitOutput('0')\n        }\n    }, [stop_loss_output, take_profit_output])\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools/\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('PnL for margin')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our profit and loss calculator for margin helps you to approximate your losses and/or gains.',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector active={tab === 'Buy'} onClick={() => onTabClick('Buy')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Buy')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Sell'} onClick={() => onTabClick('Sell')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Sell')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                <ContentContainer mb=\"4.0rem\">\n                    <FormWrapper>\n                        <Formik\n                            innerRef={formik_ref}\n                            enableReinitialize\n                            initialValues={{\n                                accountType: 'Synthetic',\n                                pnlMarginSymbol: 'USD',\n                                stopLossPips: 0,\n                                stopLossLevel: 0,\n                                takeProfitPips: 0,\n                                takeProfitLevel: 0,\n                                symbol: '',\n                                pointValue: '',\n                                volume: '',\n                                takeProfitAmount: '',\n                                optionList: syntheticItemLists,\n                                contractSize: '',\n                                assetPrice: '',\n                                stopLossAmount: '',\n                            }}\n                            validate={resetValidationPnlMargin}\n                            onSubmit={(values, { setFieldValue }) => {\n                                setFieldValue(\n                                    'stopLossPips',\n                                    getPnlMarginCommon(values, 'getStopLossPip'),\n                                )\n                                if (tab === 'Buy') {\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelBuy'),\n                                    )\n                                    setTakeProfitOutput(\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelBuy'),\n                                    )\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        getPnlMarginCommon(values, 'getStopLossLevelBuy'),\n                                    )\n                                    setStopLossOutput(\n                                        getPnlMarginCommon(values, 'getStopLossLevelBuy'),\n                                    )\n                                }\n                                if (tab === 'Sell') {\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        getPnlMarginCommon(values, 'getStopLossLevelSell'),\n                                    )\n                                    setStopLossOutput(\n                                        getPnlMarginCommon(values, 'getStopLossLevelSell'),\n                                    )\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelSell'),\n                                    )\n                                    setTakeProfitOutput(\n                                        getPnlMarginCommon(values, 'getTakeProfitLevelSell'),\n                                    )\n                                }\n\n                                setFieldValue(\n                                    'takeProfitPips',\n                                    getPnlMarginCommon(values, 'getTakeProfitPip'),\n                                )\n\n                                setFieldValue('pointValue', numberSubmitFormat(values.pointValue))\n                                setFieldValue('volume', numberSubmitFormat(values.volume))\n                                setFieldValue('assetPrice', numberSubmitFormat(values.assetPrice))\n                                setFieldValue(\n                                    'stopLossAmount',\n                                    numberSubmitFormat(values.stopLossAmount),\n                                )\n                                setFieldValue(\n                                    'takeProfitAmount',\n                                    numberSubmitFormat(values.takeProfitAmount),\n                                )\n                            }}\n                        >\n                            {({\n                                values,\n                                setFieldValue,\n                                handleBlur,\n                                errors,\n                                touched,\n                                setFieldError,\n                                setFieldTouched,\n                                isValid,\n                                dirty,\n                                setErrors,\n                                resetForm,\n                            }) => {\n                                const pnlSyntheticHandler = () => {\n                                    onSubTabClick('Synthetic')\n                                    setErrors({})\n                                    resetForm()\n                                }\n\n                                const pnlFinancialHandler = () => {\n                                    onSubTabClick('Financial')\n                                    setErrors({})\n                                    resetForm()\n                                    setFieldValue('accountType', 'Financial')\n                                    setFieldValue('optionList', financialItemLists)\n                                }\n\n                                const calculatorDropdownHandler = (value) => {\n                                    setFieldValue('pnlMarginSymbol', getCurrency(value))\n                                    setFieldValue('contractSize', getContractSize(value))\n                                    setFieldValue('symbol', value)\n                                }\n\n                                const takeProfitErrorHanlder = (current_input) => {\n                                    setFieldValue('takeProfitAmount', '', false)\n                                    setFieldError('takeProfitAmount', '')\n                                    setFieldTouched('takeProfitAmount', false, false)\n                                    current_input.focus()\n                                }\n\n                                const stopLossErrorHandler = (current_input) => {\n                                    setFieldValue('stopLossAmount', '', false)\n                                    setFieldError('stopLossAmount', '')\n                                    setFieldTouched('stopLossAmount', false, false)\n                                    current_input.focus()\n                                }\n\n                                const AssetPriceInput = ({ field }: { field: React.ReactNode }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"assetPrice\"\n                                        type=\"text\"\n                                        value={values.assetPrice}\n                                        label={localize('Open price of asset')}\n                                        autoComplete=\"off\"\n                                        error={touched.assetPrice && errors.assetPrice}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={(current_input) => {\n                                            setFieldValue('assetPrice', '', false)\n                                            setFieldError('assetPrice', '')\n                                            setFieldTouched('assetPrice', false, false)\n                                            current_input.focus()\n                                        }}\n                                        maxLength={getMaxLength(values.assetPrice, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const StopLossAmountInput = ({\n                                    field,\n                                }: {\n                                    field: React.ReactNode\n                                }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"assetPrice\"\n                                        type=\"text\"\n                                        value={values.stopLossAmount}\n                                        label={localize('Stop loss amount')}\n                                        autoComplete=\"off\"\n                                        error={touched.stopLossAmount && errors.stopLossAmount}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={stopLossErrorHandler}\n                                        maxLength={getMaxLength(values.stopLossAmount, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const PointValueInput = ({ field }: { field: React.ReactNode }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"pointValue\"\n                                        type=\"text\"\n                                        label={localize('Point value')}\n                                        autoComplete=\"off\"\n                                        error={touched.pointValue && errors.pointValue}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={(current_input) => {\n                                            setFieldValue('pointValue', '', false)\n                                            setFieldError('pointValue', '')\n                                            setFieldTouched('pointValue', false, false)\n                                            current_input.focus()\n                                        }}\n                                        maxLength={getMaxLength(values.pointValue, 8)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                const takeProfitAmountChangeHandler = (value) => {\n                                    setFieldValue('takeProfitAmount', value)\n                                }\n\n                                const stopLossAmountChangeHandler = (value) => {\n                                    setFieldValue('stopLossAmount', value)\n                                }\n\n                                const TakeProfitAmountInput = ({\n                                    field,\n                                }: {\n                                    field: React.ReactNode\n                                }) => (\n                                    <Input\n                                        {...field}\n                                        id=\"takeProfitAmount\"\n                                        type=\"text\"\n                                        label={localize('Take profit amount')}\n                                        autoComplete=\"off\"\n                                        error={touched.takeProfitAmount && errors.takeProfitAmount}\n                                        onBlur={handleBlur}\n                                        data-lpignore=\"true\"\n                                        handleError={takeProfitErrorHanlder}\n                                        maxLength={getMaxLength(values.takeProfitAmount, 15)}\n                                        background=\"white\"\n                                    />\n                                )\n\n                                return (\n                                    <>\n                                        <Show.Desktop max_width=\"mobileL\">\n                                            <CalculatorForm>\n                                                <CalculatorHeader>\n                                                    <Flex mb=\"24px\">\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.stopLossPips}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Stop loss level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.stopLossLevel}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex>\n                                                        <Flex fd=\"column\" mr=\"24px\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit pips')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.takeProfitPips}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                        <Flex fd=\"column\">\n                                                            <CalculatorLabel htmlFor=\"message\">\n                                                                {localize('Take profit level')}\n                                                            </CalculatorLabel>\n                                                            <PnLCalculatorOutputContainer>\n                                                                <PnLCalculatorOutputField>\n                                                                    {values.takeProfitLevel}\n                                                                </PnLCalculatorOutputField>\n                                                                <PnLCalculatorOutputSymbol>\n                                                                    {values.pnlMarginSymbol}\n                                                                </PnLCalculatorOutputSymbol>\n                                                            </PnLCalculatorOutputContainer>\n                                                        </Flex>\n                                                    </Flex>\n                                                </CalculatorHeader>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Account type')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Synthetic'}\n                                                            onClick={pnlSyntheticHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Synthetic')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Financial'}\n                                                            disabled={sub_tab === 'Financial'}\n                                                            onClick={pnlFinancialHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Financial')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <CalculatorDropdown\n                                                                option_list={values.optionList}\n                                                                label={localize('Symbol')}\n                                                                default_option={optionItemDefault}\n                                                                selected_option={values.symbol}\n                                                                id=\"symbol\"\n                                                                onChange={calculatorDropdownHandler}\n                                                                contractSize={values.contractSize}\n                                                                error={\n                                                                    touched.symbol && errors.symbol\n                                                                }\n                                                                onBlur={handleBlur}\n                                                            />\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"pointValue\"\n                                                                    value={values.pointValue}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'pointValue',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {PointValueInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\" mb=\"17px\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"volume\"\n                                                                    value={values.volume}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'volume',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {({ field }) => (\n                                                                        <Input\n                                                                            {...field}\n                                                                            id=\"volume\"\n                                                                            type=\"text\"\n                                                                            label={localize(\n                                                                                'Volume',\n                                                                            )}\n                                                                            autoComplete=\"off\"\n                                                                            error={\n                                                                                touched.volume &&\n                                                                                errors.volume\n                                                                            }\n                                                                            onBlur={handleBlur}\n                                                                            data-lpignore=\"true\"\n                                                                            handleError={(\n                                                                                current_input,\n                                                                            ) => {\n                                                                                setFieldValue(\n                                                                                    'volume',\n                                                                                    '',\n                                                                                    false,\n                                                                                )\n                                                                                setFieldError(\n                                                                                    'volume',\n                                                                                    '',\n                                                                                )\n                                                                                setFieldTouched(\n                                                                                    'volume',\n                                                                                    false,\n                                                                                    false,\n                                                                                )\n                                                                                current_input.focus()\n                                                                            }}\n                                                                            maxLength={getMaxLength(\n                                                                                values.volume,\n                                                                                8,\n                                                                            )}\n                                                                            background=\"white\"\n                                                                        />\n                                                                    )}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"takeProfitAmount\"\n                                                                    value={values.takeProfitAmount}\n                                                                    onChange={\n                                                                        takeProfitAmountChangeHandler\n                                                                    }\n                                                                >\n                                                                    {TakeProfitAmountInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex jc=\"space-between\">\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"assetPrice\"\n                                                                    value={values.assetPrice}\n                                                                    onChange={(value) => {\n                                                                        setFieldValue(\n                                                                            'assetPrice',\n                                                                            value,\n                                                                        )\n                                                                    }}\n                                                                >\n                                                                    {AssetPriceInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                        <Flex fd=\"column\" width=\"23.4rem\">\n                                                            <PnLInputGroup>\n                                                                <Field\n                                                                    name=\"stopLossAmount\"\n                                                                    value={values.stopLossAmount}\n                                                                    onChange={\n                                                                        stopLossAmountChangeHandler\n                                                                    }\n                                                                >\n                                                                    {StopLossAmountInput}\n                                                                </Field>\n                                                            </PnLInputGroup>\n                                                        </Flex>\n                                                    </Flex>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </CalculatorForm>\n                                        </Show.Desktop>\n\n                                        <Show.Mobile min_width=\"mobileL\">\n                                            <PnlCalculatorFormMobile>\n                                                <PnlHeaderOverflow>\n                                                    <PnlCalculatorHeaderMobile>\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mr=\"24px\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss pips')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossPips}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossLevel}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mr=\"24px\" mb=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit pips')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.takeProfitPips}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.takeProfitLevel}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n                                                    </PnlCalculatorHeaderMobile>\n                                                </PnlHeaderOverflow>\n\n                                                <CalculatorBody>\n                                                    <CalculatorLabel>\n                                                        {localize('Account type')}\n                                                    </CalculatorLabel>\n                                                    <Flex\n                                                        mb=\"3rem\"\n                                                        mt=\"1rem\"\n                                                        jc=\"space-between\"\n                                                        tablet={{ height: 'unset' }}\n                                                    >\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Synthetic'}\n                                                            onClick={pnlSyntheticHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Synthetic')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                        <PnlCalculatorTabItem\n                                                            active={sub_tab === 'Financial'}\n                                                            disabled={sub_tab === 'Financial'}\n                                                            onClick={pnlFinancialHandler}\n                                                        >\n                                                            <Text align=\"center\">\n                                                                {localize('Financial')}\n                                                            </Text>\n                                                        </PnlCalculatorTabItem>\n                                                    </Flex>\n                                                    <CalculatorDropdown\n                                                        option_list={values.optionList}\n                                                        label={localize('Symbol')}\n                                                        default_option={optionItemDefault}\n                                                        selected_option={values.symbol}\n                                                        id=\"symbol\"\n                                                        onChange={calculatorDropdownHandler}\n                                                        contractSize={values.contractSize}\n                                                        error={touched.symbol && errors.symbol}\n                                                        onBlur={handleBlur}\n                                                    />\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"volume\"\n                                                            value={values.volume}\n                                                            onChange={(value) => {\n                                                                setFieldValue('volume', value)\n                                                            }}\n                                                        >\n                                                            {({ field }) => (\n                                                                <Input\n                                                                    {...field}\n                                                                    id=\"volume\"\n                                                                    type=\"text\"\n                                                                    label={localize('Volume')}\n                                                                    autoComplete=\"off\"\n                                                                    error={\n                                                                        touched.volume &&\n                                                                        errors.volume\n                                                                    }\n                                                                    onBlur={handleBlur}\n                                                                    data-lpignore=\"true\"\n                                                                    handleError={(\n                                                                        current_input,\n                                                                    ) => {\n                                                                        setFieldValue(\n                                                                            'volume',\n                                                                            '',\n                                                                            false,\n                                                                        )\n                                                                        setFieldError('volume', '')\n                                                                        setFieldTouched(\n                                                                            'volume',\n                                                                            false,\n                                                                            false,\n                                                                        )\n                                                                        current_input.focus()\n                                                                    }}\n                                                                    maxLength={getMaxLength(\n                                                                        values.volume,\n                                                                        8,\n                                                                    )}\n                                                                    background=\"white\"\n                                                                />\n                                                            )}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"assetPrice\"\n                                                            value={values.assetPrice}\n                                                            onChange={(value) => {\n                                                                setFieldValue('assetPrice', value)\n                                                            }}\n                                                        >\n                                                            {AssetPriceInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"pointValue\"\n                                                            value={values.pointValue}\n                                                            onChange={(value) => {\n                                                                setFieldValue('pointValue', value)\n                                                            }}\n                                                        >\n                                                            {PointValueInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"takeProfitAmount\"\n                                                            value={values.takeProfitAmount}\n                                                            onChange={takeProfitAmountChangeHandler}\n                                                        >\n                                                            {TakeProfitAmountInput}\n                                                        </Field>\n                                                    </InputGroup>\n                                                    <InputGroup>\n                                                        <Field\n                                                            name=\"stopLossAmount\"\n                                                            value={values.stopLossAmount}\n                                                            onChange={stopLossAmountChangeHandler}\n                                                        >\n                                                            {StopLossAmountInput}\n                                                        </Field>\n                                                    </InputGroup>\n\n                                                    <Flex mt=\"1.5rem\">\n                                                        <CalculateButton\n                                                            secondary\n                                                            type=\"submit\"\n                                                            disabled={!isValid || !dirty}\n                                                        >\n                                                            {localize('Calculate')}\n                                                        </CalculateButton>\n                                                    </Flex>\n                                                </CalculatorBody>\n                                            </PnlCalculatorFormMobile>\n                                        </Show.Mobile>\n                                    </>\n                                )\n                            }}\n                        </Formik>\n                    </FormWrapper>\n\n                    {tab === 'Buy' ? (\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when buying a contract on Deriv MT5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price + {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are buying a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the stop loss level and pip value when you want to buy a lot of EUR/USD priced at 1.17524 USD with a stop loss amount of 24 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Stop loss level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_formula_mobile}\n                                            alt={localize('stop loss level formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of forex = 100,000 units.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Stop loss pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_pip_formula_mobile}\n                                            alt={localize('stop loss pip formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 5, so the point value is 0.00001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your stop loss level is at <0>1.1750</0> and when your stop loss pip value is <0>24 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary=\"true\"\n                                        type=\"mt5\"\n                                        external=\"true\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to Deriv MT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    ) : (\n                        <RightContent key={tab}>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize(\n                                    'How to calculate stop loss and/or take profit level and pip value',\n                                )}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level and pip value when selling a contract on Deriv MT5 (DMT5) is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level = asset price - {stop loss OR take profit amount ÷ (volume × contract size)}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit pip value = |(stop loss OR take profit level - asset price)| ÷ point value</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level helps you to manage your risk when you are selling a contract.',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'For financial accounts, the stop loss and/or take profit pip value is in the quote currency for forex pairs.',\n                                )}\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'For synthetic accounts, the stop loss and/or take profit pip value is in USD.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('Example calculation')}\n                            </Header>\n                            <Text mb=\"16px\">\n                                {localize(\n                                    'Let’s say you want to calculate the take profit level and pip value when you want to sell 3 lots of Volatility 50 Index priced at 249.5961 USD with a take profit amount of 84 USD.',\n                                )}\n                            </Text>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Take profit level')}\n                                    header_style={header_style}\n                                    style={{\n                                        padding: '0 0 24px 0',\n                                    }}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_formula}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_formula_mobile}\n                                            alt={localize('take profit level formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The contract size is one standard lot of Volatility 50 Index = 1.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Take profit pip value')}\n                                    header_style={header_style}\n                                    plus\n                                >\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_pip_formula_mobile}\n                                            alt={localize('take profit pip formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    {localize(\n                                                        'The point value is derived from the current digits of the asset. In this example, the digit is 4, so the point value is 0.0001.',\n                                                    )}\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"Your position is automatically closed when your take profit level is at <0>221.5961</0> and the pip value is <0>280,000 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                {\n                                    <StyledLinkButton\n                                        secondary=\"true\"\n                                        type=\"mt5\"\n                                        external=\"true\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to Deriv MT5 dashboard')}\n                                    </StyledLinkButton>\n                                }\n                            </LinkWrapper>\n                        </RightContent>\n                    )}\n                </ContentContainer>\n            </StyledSection>\n        </>\n    )\n}\n\nexport default PnlMarginCalculator\n","import React from 'react'\nimport { Hero, StyledHeader } from '../common/_style'\nimport PnLMarginCalculatorSection from './_pnl-margin-calculator'\nimport { Container, SEO } from 'components/containers'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst PnLMarginCalculator = () => {\n    return (\n        <Layout>\n            <SEO\n                title={localize('PnL Margin Calculator')}\n                description={localize('PnL Margin Calculator')}\n            />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <StyledHeader as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Stop loss and/or take profit calculator for margin')}\n                    </StyledHeader>\n                </Container>\n            </Hero>\n            <PnLMarginCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(PnLMarginCalculator)\n"],"names":["data","useStaticQuery","formik_ref","useRef","form","current","useState","tab","setTab","sub_tab","setSubTab","stop_loss_output","setStopLossOutput","take_profit_output","setTakeProfitOutput","onTabClick","t","resetForm","setErrors","setFieldValue","syntheticItemLists","financialItemLists","onSubTabClick","React","values","pointValue","getPnlMarginCommon","jc","ai","to","color","localize","src","RightArrow","alt","height","width","style","margin","direction","as","type","align","weight","mt","mb","tablet","active","onClick","size","innerRef","enableReinitialize","initialValues","accountType","pnlMarginSymbol","stopLossPips","stopLossLevel","takeProfitPips","takeProfitLevel","symbol","volume","takeProfitAmount","optionList","contractSize","assetPrice","stopLossAmount","validate","resetValidationPnlMargin","onSubmit","numberSubmitFormat","handleBlur","errors","touched","setFieldError","setFieldTouched","isValid","dirty","pnlSyntheticHandler","pnlFinancialHandler","calculatorDropdownHandler","value","getCurrency","getContractSize","takeProfitErrorHanlder","current_input","focus","stopLossErrorHandler","AssetPriceInput","field","id","label","autoComplete","error","onBlur","handleError","maxLength","getMaxLength","background","StopLossAmountInput","PointValueInput","takeProfitAmountChangeHandler","stopLossAmountChangeHandler","TakeProfitAmountInput","max_width","fd","mr","htmlFor","disabled","option_list","default_option","optionItemDefault","selected_option","onChange","name","secondary","min_width","translate_text","components","key","has_single_state","header","header_style","padding","plus","stop_loss_level_formula","stop_loss_level_formula_mobile","stop_loss_pip_formula","stop_loss_pip_formula_mobile","external","target","rel","take_profit_level_formula","take_profit_level_formula_mobile","take_profit_pip_formula","take_profit_pip_formula_mobile","WithIntl","title","description"],"sourceRoot":""}