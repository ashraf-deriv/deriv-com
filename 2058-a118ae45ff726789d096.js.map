{"version":3,"file":"2058-a118ae45ff726789d096.js","mappings":"yLAoBMA,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,IAAV,mFAAGD,CAAH,6GAKbE,GAAcF,EAAAA,EAAAA,SAAOG,EAAAA,IAAV,iFAAGH,CAAH,4BACJI,EAAAA,EAAAA,SAKPC,GAAUL,EAAAA,EAAAA,SAAOM,EAAAA,IAAV,6EAAGN,CAAH,kOAGO,SAACO,GAAD,OAAWA,EAAMC,gBAClB,SAACD,GAAD,OAAWA,EAAME,cAE9BC,EAAAA,GAGWN,EAAAA,EAAAA,QAOJA,EAAAA,EAAAA,SAOPO,EAAeX,EAAAA,QAAAA,IAAAA,WAAH,uEAAGA,CAAH,wGAGE,SAACO,GAAD,OAAWA,EAAMC,eAExBJ,EAAAA,EAAAA,SAMPQ,GAAeZ,EAAAA,EAAAA,SAAOa,EAAAA,IAAV,kFAAGb,CAAH,oFAGLI,EAAAA,EAAAA,SAMPU,EAAMd,EAAAA,QAAAA,IAAAA,WAAH,8DAAGA,CAAH,+HACa,SAACO,GAAD,OAAWA,EAAMQ,iBAS1BX,EAAAA,EAAAA,SA+Fb,UA9BsB,SAAC,GAA6C,IAA3CY,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,QACxBC,GAAOC,EAAAA,EAAAA,gBA7DH,cA8DV,OACI,wBAACpB,EAAD,KACI,wBAACG,EAAD,CAAakB,GAAG,UACXJ,EAAQK,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAUP,GAAWM,EAAQ,GAAK,EAAIA,EAAQ,EACpD,OACI,wBAACT,EAAD,CAAKC,eAAiBS,EAAkB,cAAR,MAAuBC,IAAKF,GACxD,wBAAClB,EAAD,KACI,wBAACO,EAAD,CAAcc,KAAK,iBAAiBJ,EAAKK,OACzC,wBAAC,KAAD,KAAOL,EAAKM,WAEfN,EAAKO,YACF,wBAAClB,EAAD,CAAcH,aAAegB,EAAgB,SAAN,KACnC,wBAAC,KAAD,CACIN,KAAMA,EAAKI,EAAKO,YAChBC,IAAKR,EAAKS,UACVC,MAAM","sources":["webpack://deriv-com/./src/pages/landing/stocks/_parallelogram.tsx"],"sourcesContent":["import React, { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, SectionContainer, Flex } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\n\ntype ContentProps = {\n    margin_right: string\n    margin_left: string\n}\n\ntype ImageWrapperProps = {\n    margin_right?: string\n}\n\ntype RowProps = {\n    flex_direction: string\n}\n\nconst StyledSection = styled(SectionContainer)`\n    background-color: var(--color-grey-30);\n    clip-path: polygon(0 0, 100% 4%, 100% 100%, 0 96%);\n    padding: 64px 16px;\n`\nconst MainWrapper = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\n\nconst Content = styled(Flex)<ContentProps>`\n    width: 60%;\n    flex-direction: column;\n    margin-right: ${(props) => props.margin_right};\n    margin-left: ${(props) => props.margin_left};\n\n    ${Text} {\n        margin-top: 2.2rem;\n        font-size: 2.4rem;\n        @media ${device.tabletL} {\n            margin-top: 8px;\n            font-size: 20px;\n            text-align: center;\n        }\n    }\n\n    @media ${device.tabletL} {\n        width: 100%;\n        max-width: 58.8rem;\n        margin: 0 auto;\n    }\n`\n\nconst ImageWrapper = styled.div<ImageWrapperProps>`\n    display: flex;\n    width: 40%;\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        margin: 2rem auto;\n        max-width: 58.8rem;\n        width: 100%;\n    }\n`\nconst StyledHeader = styled(Header)`\n    line-height: 1.25;\n\n    @media ${device.tabletL} {\n        font-size: 40px;\n        line-height: 50px;\n        text-align: center;\n    }\n`\nconst Row = styled.div<RowProps>`\n    flex-direction: ${(props) => props.flex_direction};\n    width: 100%;\n    display: flex;\n    margin-top: 4rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n    }\n`\n\nconst query = graphql`\n    query {\n        dbot_strategy: file(relativePath: { eq: \"dbot/dbot-strategy.png\" }) {\n            ...fadeIn\n        }\n        dbot_build_strategy: file(relativePath: { eq: \"dbot/dbot-build-strategy.png\" }) {\n            ...fadeIn\n        }\n        dbot_maximise_profits: file(relativePath: { eq: \"dbot/dbot-maximise-profits.png\" }) {\n            ...fadeIn\n        }\n        dbot_track_your_performance: file(\n            relativePath: { eq: \"dbot/dbot-track-your-performance.png\" }\n        ) {\n            ...fadeIn\n        }\n        dbot_get_integrated_help: file(relativePath: { eq: \"dbot/dbot-get-integrated-help.png\" }) {\n            ...fadeIn\n        }\n        dbot_save_your_strategies: file(\n            relativePath: { eq: \"dbot/dbot-save-your-strategies.png\" }\n        ) {\n            ...fadeIn\n        }\n        dmt_5_ipad_iphone: file(relativePath: { eq: \"dmt5/dmt-5-ipad-iphone.png\" }) {\n            ...fadeIn\n        }\n        dmt_5_mac: file(relativePath: { eq: \"dmt5/dmt-5-mac.png\" }) {\n            ...fadeIn\n        }\n        make_smarter: file(relativePath: { eq: \"dtrader/make-smarter.png\" }) {\n            ...fadeIn\n        }\n        trade_what_you_want: file(relativePath: { eq: \"dtrader/trade-what-you-want.png\" }) {\n            ...fadeIn\n        }\n        how_you_want: file(relativePath: { eq: \"dtrader/how-you-want.png\" }) {\n            ...fadeIn\n        }\n        stocks_zero_fees: file(relativePath: { eq: \"stock-indices/stocks-zero-fees.png\" }) {\n            ...fadeIn\n        }\n        stocks_blue_chip: file(relativePath: { eq: \"stock-indices/stocks-blue-chip.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\ntype ParallelogramProps = {\n    reverse: boolean\n    trading: TradingType[]\n}\n\ntype TradingType = {\n    title: ReactElement\n    subtitle: ReactElement\n    image_name: string\n    image_alt: string\n}\n\nconst Parallelogram = ({ trading, reverse }: ParallelogramProps) => {\n    const data = useStaticQuery(query)\n    return (\n        <StyledSection>\n            <MainWrapper fd=\"column\">\n                {trading.map((item, index) => {\n                    const is_even = reverse ? (index + 1) % 2 : index % 2\n                    return (\n                        <Row flex_direction={!is_even ? 'row' : 'row-reverse'} key={index}>\n                            <Content>\n                                <StyledHeader type=\"display-title\">{item.title}</StyledHeader>\n                                <Text>{item.subtitle}</Text>\n                            </Content>\n                            {item.image_name && (\n                                <ImageWrapper margin_right={!is_even ? '0' : '2.4rem'}>\n                                    <QueryImage\n                                        data={data[item.image_name]}\n                                        alt={item.image_alt}\n                                        width=\"100%\"\n                                    />\n                                </ImageWrapper>\n                            )}\n                        </Row>\n                    )\n                })}\n            </MainWrapper>\n        </StyledSection>\n    )\n}\n\nexport default Parallelogram\n"],"names":["StyledSection","styled","SectionContainer","MainWrapper","Container","device","Content","Flex","props","margin_right","margin_left","Text","ImageWrapper","StyledHeader","Header","Row","flex_direction","trading","reverse","data","useStaticQuery","fd","map","item","index","is_even","key","type","title","subtitle","image_name","alt","image_alt","width"],"sourceRoot":""}