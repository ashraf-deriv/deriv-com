{"version":3,"file":"component---src-pages-landing-forex-trading-index-tsx-1ad6387220ee184d6140.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/home/_lazy-load.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/components/_hero.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/components/_image-text-switching.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/components/_table-btn.tsx","webpack://deriv-com/./src/pages/landing/forex-trading/index.tsx"],"sourcesContent":["import Loadable from '@loadable/component'\n\nexport const Markets = Loadable(() => import('./_markets'))\nexport const TradeTypes = Loadable(() => import('./_trade-types'))\nexport const OurPlatforms = Loadable(() => import('./_our_platforms'))\nexport const WhatOurClientsSay = Loadable(() => import('./_what-our-clients-say'))\nexport const SimpleSteps = Loadable(() => import('components/custom/_simple-steps'))\nexport const Signup = Loadable(() => import('components/custom/signup'))\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Flex, Container, Desktop, Mobile } from 'components/containers'\nimport { Header } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { Background } from 'components/elements/background-image'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device.js'\n\ntype HeroComponentProps = {\n    background_data: string\n    content: React.ReactNode\n    title: string\n}\n\ntype HeroProps = {\n    content: React.ReactNode\n    title: string\n}\n\nconst BackgroundWrapper = styled(Background)`\n    background-size: cover;\n    background-position: bottom right;\n`\n\nconst Wrapper = styled(Container)`\n    @media ${device.tabletS} {\n        height: 70rem;\n        margin-left: 0;\n        padding: 2rem 16px 0;\n        flex-direction: column-reverse;\n        justify-content: center;\n    }\n`\n\nconst InformationWrapper = styled(Flex)`\n    width: 100%;\n    max-width: 75rem;\n    z-index: 1;\n\n    @media ${device.tabletL} {\n        max-width: 55rem;\n        top: 280px;\n        padding: 0 16px;\n    }\n    @media ${device.mobileL} {\n        max-width: 390px;\n        padding: 0;\n    }\n`\n\nconst StyledHeader = styled(Header)`\n    display: flex;\n\n    @media ${device.tabletL} {\n        margin-top: 1.5rem;\n    }\n    @media ${device.mobileS} {\n        margin-top: 18px;\n    }\n`\n\nconst HeroContent = styled(Flex)`\n    height: unset;\n\n    ${Header} {\n        display: flex;\n        margin-top: 1rem;\n    }\n\n    @media ${device.mobileL} {\n        ${Header} {\n            margin: 10px 0 0;\n        }\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    padding: 17px 24px;\n    width: min-content;\n    white-space: nowrap;\n    font-size: 18px;\n    border: unset;\n\n    @media ${device.tablet} {\n        padding: 14px 18px;\n        font-size: 14px;\n        margin-top: 40px;\n        font-weight: 700;\n    }\n    @media ${device.mobileL} {\n        margin-top: 20px;\n    }\n    @media ${device.mobileS} {\n        margin-top: 10px;\n    }\n`\n\nconst HeroComponent = ({ title, content, background_data }: HeroComponentProps) => {\n    return (\n        <BackgroundWrapper data={background_data}>\n            <Wrapper p=\"0\" justify=\"space-between\" height=\"63rem\">\n                <InformationWrapper height=\"unset\" direction=\"column\">\n                    <StyledHeader mt=\"6.2rem\" type=\"hero\" color=\"white\">\n                        {title}\n                    </StyledHeader>\n                    <HeroContent m=\"2rem 0 0\" direction=\"column\" justify=\"flex-start\">\n                        <Header color=\"white\" type=\"subtitle-1\" weight=\"normal\">\n                            {content}\n                        </Header>\n                    </HeroContent>\n                    <TryButton\n                        m=\"3rem 0 80px\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer nofollow\"\n                        type=\"submit\"\n                        secondary=\"true\"\n                        to={'/signup/'}\n                    >\n                        {localize('Start trading')}\n                    </TryButton>\n                </InformationWrapper>\n            </Wrapper>\n        </BackgroundWrapper>\n    )\n}\n\nconst query = graphql`\n    query {\n        p2p_hero_background: file(relativePath: { eq: \"landing/trade-fx.jpg\" }) {\n            ...fadeIn\n        }\n        p2p_hero_background_mobile: file(relativePath: { eq: \"landing/trade-fx-m.jpg\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Hero = ({ title, content }: HeroProps) => {\n    const data = useStaticQuery(query)\n\n    return (\n        <div>\n            <Desktop>\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background']}\n                />\n            </Desktop>\n            <Mobile>\n                <HeroComponent\n                    title={title}\n                    content={content}\n                    background_data={data['p2p_hero_background_mobile']}\n                />\n            </Mobile>\n        </div>\n    )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport device from 'themes/device'\nimport { Container, SectionContainer, Desktop, Mobile } from 'components/containers'\nimport { Header, Text, QueryImage } from 'components/elements'\nimport { localize } from 'components/localization'\nimport { isIndexEven } from 'common/utility'\n\ntype P2PType = {\n    title: React.ReactNode\n    subtitle1: React.ReactNode\n    subtitle_mobile1: React.ReactNode\n    second_title?: string\n    second_subtitle1?: string\n    image_alt: string\n    image_name: string\n}[]\n\ntype ImageTextSwitchingProps = {\n    P2P: P2PType\n    reverse: boolean\n    two_title?: string\n}\n\ntype ContentProps = {\n    margin_right: string\n}\n\ntype ImageWrapperProps = {\n    margin_right: string\n}\n\ntype RowProps = {\n    flex_direction: string\n}\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        padding: 40px 16px;\n    }\n`\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\n\nconst Content = styled.div<ContentProps>`\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin-right: ${(props) => props.margin_right};\n    @media ${device.tabletL} {\n        width: 90%;\n    }\n\n    ${Text} {\n        font-weight: 350;\n        @media ${device.tabletL} {\n            font-weight: 400;\n            font-size: 18px;\n            text-align: center;\n        }\n    }\n\n    @media ${device.tabletL} {\n        margin: 0 auto;\n    }\n`\nconst ImageWrapper = styled.div<ImageWrapperProps>`\n    width: 40%;\n    margin-right: ${(props) => props.margin_right};\n\n    @media ${device.tabletL} {\n        width: 100%;\n        max-width: 400px;\n        margin: 2rem auto;\n    }\n`\nconst StyledHeader = styled(Header)`\n    @media ${device.tabletL} {\n        width: 98%;\n        margin-top: 0;\n        text-align: center;\n    }\n`\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        line-height: 30px;\n    }\n`\nconst Row = styled.div<RowProps>`\n    justify-content: space-around;\n    flex-direction: ${(props) => props.flex_direction};\n    width: 85%;\n    display: flex;\n    margin-top: 9rem;\n\n    &:first-child {\n        margin-top: 0;\n    }\n\n    @media ${device.tabletL} {\n        flex-direction: column;\n        margin-top: 40px;\n    }\n`\n\nconst query = graphql`\n    query {\n        login: file(relativePath: { eq: \"landing/login.png\" }) {\n            ...fadeIn\n        }\n        dmt5_acc: file(relativePath: { eq: \"landing/dmt5-acc.png\" }) {\n            ...fadeIn\n        }\n        dmt5_login: file(relativePath: { eq: \"landing/dmt5-login.png\" }) {\n            ...fadeIn\n        }\n    }\n`\nconst ImageTextSwitching = ({ P2P, reverse, two_title }: ImageTextSwitchingProps) => {\n    const data = useStaticQuery(query)\n    return (\n        <StyledSection background=\"var(--color-white)\" padding=\"10rem 0\">\n            <StyledContainer direction=\"column\">\n                <StyledText\n                    align=\"center\"\n                    lh=\"4rem\"\n                    size=\"var(--text-size-l)\"\n                    mb=\"1rem\"\n                    weight=\"bold\"\n                >\n                    {localize('Trade forex with ultra-low spreads in 3 simple steps:')}\n                </StyledText>\n\n                {P2P.map((item, index) => {\n                    const is_even = isIndexEven(index, reverse)\n                    return (\n                        <Row flex_direction={!is_even ? 'row' : 'row-reverse'} key={index}>\n                            <Content margin_right={!is_even ? '12.6rem' : '0'}>\n                                <StyledHeader type=\"heading-3\" mb=\"1rem\">\n                                    {item.title}\n                                </StyledHeader>\n                                <Desktop>\n                                    <Text size=\"var(--text-size-m)\" pb=\"2rem\">\n                                        {item.subtitle1}\n                                    </Text>\n                                </Desktop>\n                                <Mobile>\n                                    <Text pb=\"2rem\">{item.subtitle_mobile1}</Text>\n                                </Mobile>\n                                {two_title && (\n                                    <>\n                                        <StyledHeader type=\"heading-3\">\n                                            {item.second_title}\n                                        </StyledHeader>\n                                        <Text>{item.second_subtitle1}</Text>\n                                    </>\n                                )}\n                            </Content>\n                            <ImageWrapper margin_right={!is_even ? '0' : '12.6rem'}>\n                                <QueryImage data={data[item.image_name]} alt={item.image_alt} />\n                            </ImageWrapper>\n                        </Row>\n                    )\n                })}\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nexport default ImageTextSwitching\n","import React from 'react'\nimport styled from 'styled-components'\nimport MarketInstruments from '../../../markets/components/sections/_market_instruments.js'\nimport { SwapFreePairs } from '../../../markets/instruments/_index'\nimport device from 'themes/device'\nimport { Container, SectionContainer } from 'components/containers'\nimport { Localize } from 'components/localization'\nimport { Text } from 'components/elements'\nimport { LinkButton } from 'components/form'\n\ntype TablebtnProps = {\n    btnlabel: string\n    text: string\n}\n\nconst StyledSection = styled(SectionContainer)`\n    @media ${device.tabletL} {\n        padding: 40px 16px;\n    }\n`\n\nconst StyledContainer = styled(Container)`\n    @media ${device.tabletL} {\n        width: 100%;\n    }\n`\n\nconst StyledText = styled(Text)`\n    @media ${device.tabletL} {\n        font-size: 16px;\n        line-height: 30px;\n    }\n`\n\nconst TryButton = styled(LinkButton)`\n    @media ${device.mobileL} {\n        white-space: nowrap;\n        margin-bottom: 2rem;\n    }\n    @media ${device.mobileL} {\n        margin-top: 24px 0 40px;\n    }\n`\n\nconst Tablebtn = ({ btnlabel, text }: TablebtnProps) => {\n    const swap_free_pairs = {\n        markets_list: {\n            col: 4,\n            tablet_col: 3,\n            mobile_col: 2,\n        },\n        content: [\n            {\n                title: <Localize translate_text=\"Swap-free pairs\" />,\n                component: <SwapFreePairs />,\n            },\n        ],\n    }\n\n    return (\n        <StyledSection background=\"var(--color-grey-30)\" padding=\"3rem 0\">\n            <StyledContainer direction=\"column\">\n                <StyledText width=\"100%\" size=\"1.7rem\">\n                    {text}\n                </StyledText>\n                <MarketInstruments\n                    market_content={swap_free_pairs}\n                    background=\"var(--color-white)\"\n                />\n                <TryButton\n                    m=\"4.2rem 0 40px\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer nofollow\"\n                    type=\"submit\"\n                    secondary=\"true\"\n                    to={'/signup/'}\n                >\n                    {btnlabel}\n                </TryButton>\n            </StyledContainer>\n        </StyledSection>\n    )\n}\n\nexport default Tablebtn\n","import React from 'react'\nimport Loadable from '@loadable/component'\nimport { Signup, WhatOurClientsSay } from '../../home/_lazy-load'\nimport Hero from './components/_hero'\nimport ImageTextSwitching from './components/_image-text-switching'\nimport Tablebtn from './components/_table-btn'\nimport { usePageLoaded } from 'components/hooks/use-page-loaded'\nimport { localize, Localize, WithIntl } from 'components/localization'\nimport { Appearances } from 'components/custom/signup'\nimport Layout from 'components/layout/layout'\nimport { SEO } from 'components/containers'\nconst IconTextRow = Loadable(() => import('./components/_icon-text-row'))\n\nconst DP2P_CONTENT = [\n    {\n        title: <Localize translate_text=\"Step 1\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Log in or sign up for a Deriv account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Log in or sign up for a Deriv account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n\n        image_name: 'login',\n        image_alt: localize('Login'),\n    },\n    {\n        title: <Localize translate_text=\"Step 2\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Add a Deriv MT5 Financial real account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Add a Deriv MT5 Financial real account.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n\n        image_name: 'dmt5_acc',\n        image_alt: localize('DMT5 account'),\n    },\n    {\n        title: <Localize translate_text=\"Step 3\" />,\n        subtitle1: (\n            <Localize\n                translate_text=\"Log in to Deriv MT5, select an asset, and start trading.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n        subtitle_mobile1: (\n            <Localize\n                translate_text=\"Log in to Deriv MT5, select an asset, and start trading.<0 />\"\n                components={[<br key={0} />]}\n            />\n        ),\n\n        image_name: 'dmt5_login',\n        image_alt: localize('DMT5 login'),\n    },\n]\n\nconst ForexTrading = () => {\n    const [is_mounted] = usePageLoaded(false) // needed to fix the second Hero-component during page's loading\n    return (\n        <Layout type=\"landing-page\" is_ppc_redirect={true}>\n            <SEO\n                title={localize('Weekends')}\n                description={localize('Ride the trends even on weekends')}\n            />\n            {is_mounted && (\n                <>\n                    <Hero\n                        title={localize('Take advantage of the best trading conditions by Deriv')}\n                        content={\n                            <Localize translate_text=\"Your trusted broker with intuitive forex trading platforms, convenient payment options, and a 24/7 support team.\" />\n                        }\n                    />\n                    <IconTextRow />\n                    <Tablebtn\n                        btnlabel={localize('Get trading on Deriv')}\n                        text={localize('*available for selected pairs:')}\n                    />\n                    <ImageTextSwitching reverse P2P={DP2P_CONTENT} />\n                    <WhatOurClientsSay />\n                    <Signup appearance={Appearances.public} />\n                </>\n            )}\n        </Layout>\n    )\n}\n\nexport default WithIntl()(ForexTrading)\n"],"names":["Markets","Loadable","WhatOurClientsSay","SimpleSteps","Signup","BackgroundWrapper","styled","Background","Wrapper","Container","device","InformationWrapper","Flex","StyledHeader","Header","HeroContent","TryButton","LinkButton","HeroComponent","title","content","background_data","data","p","justify","height","direction","mt","type","color","m","weight","target","rel","secondary","to","localize","useStaticQuery","StyledSection","SectionContainer","StyledContainer","Content","props","margin_right","Text","ImageWrapper","StyledText","Row","flex_direction","P2P","reverse","two_title","background","padding","align","lh","size","mb","map","item","index","is_even","isIndexEven","key","pb","subtitle1","subtitle_mobile1","second_title","second_subtitle1","image_name","alt","image_alt","btnlabel","text","swap_free_pairs","markets_list","col","tablet_col","mobile_col","translate_text","component","width","market_content","IconTextRow","DP2P_CONTENT","components","WithIntl","is_mounted","usePageLoaded","is_ppc_redirect","description","appearance","Appearances"],"sourceRoot":""}