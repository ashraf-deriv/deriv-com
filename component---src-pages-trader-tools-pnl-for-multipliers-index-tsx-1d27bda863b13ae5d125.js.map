{"version":3,"file":"component---src-pages-trader-tools-pnl-for-multipliers-index-tsx-1d27bda863b13ae5d125.js","mappings":"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","sources":["webpack://deriv-com/./src/pages/trader-tools/pnl-for-multipliers/_pnl_multipliers_calculator.tsx","webpack://deriv-com/./src/pages/trader-tools/pnl-for-multipliers/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Field, Formik } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { FormikErrors, FormikTouched } from '../common/_formik-types'\nimport {\n    getPnlMultiplierCommon,\n    numberSubmitFormat,\n    resetValidationPnlMultipliersAmount,\n    resetValidationPnlMultipliersLevel,\n    getMaxLength,\n} from '../common/_utility'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorForm,\n    CalculatorHeader,\n    CalculatorLabel,\n    ContentContainer,\n    FormulaText,\n    FormWrapper,\n    header_style,\n    InputGroup,\n    item_style,\n    LinkWrapper,\n    PnLCalculatorOutputContainer,\n    PnLCalculatorOutputField,\n    PnLCalculatorOutputSymbol,\n    PnlCalculatorTabItem,\n    PnLInputGroup,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapTabSelector,\n} from '../common/_style'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex, Show } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/tools/black-right-arrow.svg'\n\ntype ErrorHandlersKeyType =\n    | 'commissionErrorHandler'\n    | 'stopLossAmountErrorHandler'\n    | 'assetPriceErrorHandler'\n    | 'multiplierErrorHandler'\n    | 'stopLossLevelErrorHandler'\n    | 'stakeErrorHandler'\n\ntype ErrorHandlersCallbackType = (current_input: string) => void\n\ntype ErrorHandlersFunctionType = Partial<Record<ErrorHandlersKeyType, ErrorHandlersCallbackType>>\n\ntype FormikState<Values> = {\n    values: Values\n    setFieldValue: (field: string, value: string, shouldValidate?: boolean) => void\n    touched: FormikTouched<Values>\n    errors: FormikErrors<Values>\n    handleBlur: {\n        (e: React.FocusEvent<string>): void\n    }\n}\n\ntype FieldsType<Values> = FormikState<Values> & ErrorHandlersFunctionType\n\ntype CommissionFieldProps = {\n    commission: string\n}\n\ntype StopLossAmountFieldProps = {\n    stopLossAmount: string\n}\n\ntype AssetPriceFieldProps = {\n    assetPrice: string\n}\n\ntype MultiplierFieldProps = {\n    multiplier: string\n}\n\ntype StopLossLevelFieldProps = {\n    stopLossLevel: string\n}\n\ntype StakeFieldProps = {\n    stake: string\n}\n\nconst CommissionField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    commissionErrorHandler,\n}: FieldsType<CommissionFieldProps>) => (\n    <Field\n        name=\"commission\"\n        value={values.commission}\n        onChange={(value) => {\n            setFieldValue('commission', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"commission\"\n                type=\"text\"\n                label={localize('Commission')}\n                autoComplete=\"off\"\n                error={touched.commission && errors.commission}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={commissionErrorHandler}\n                maxLength={getMaxLength(values.commission, 8)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst StopLossAmountField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    stopLossAmountErrorHandler,\n}: FieldsType<StopLossAmountFieldProps>) => (\n    <Field\n        name=\"stopLossAmount\"\n        value={values.stopLossAmount}\n        onChange={(value) => {\n            setFieldValue('stopLossAmount', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"stopLossAmount\"\n                type=\"text\"\n                value={values.stopLossAmount}\n                label={localize('Stop loss amount')}\n                autoComplete=\"off\"\n                error={touched.stopLossAmount && errors.stopLossAmount}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={stopLossAmountErrorHandler}\n                maxLength={getMaxLength(values.stopLossAmount, 15)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst AssetPriceField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    assetPriceErrorHandler,\n}: FieldsType<AssetPriceFieldProps>) => (\n    <Field\n        name=\"assetPrice\"\n        value={values.assetPrice}\n        onChange={(value) => setFieldValue('assetPrice', value)}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"assetPrice\"\n                type=\"text\"\n                label={localize('Asset price')}\n                autoComplete=\"off\"\n                error={touched.assetPrice && errors.assetPrice}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={assetPriceErrorHandler}\n                maxLength={getMaxLength(values.assetPrice, 8)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst MultiplierField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    multiplierErrorHandler,\n}: FieldsType<MultiplierFieldProps>) => (\n    <Field\n        name=\"multiplier\"\n        value={values.multiplier}\n        onChange={(value) => {\n            setFieldValue('multiplier', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"multiplier\"\n                type=\"text\"\n                value={values.multiplier}\n                label={localize('Multiplier')}\n                autoComplete=\"off\"\n                error={touched.multiplier && errors.multiplier}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={multiplierErrorHandler}\n                maxLength={getMaxLength(values.multiplier, 4)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst MultiplierFieldWithoutValue = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    multiplierErrorHandler,\n}: FieldsType<MultiplierFieldProps>) => (\n    <Field\n        name=\"multiplier\"\n        value={values.multiplier}\n        onChange={(value) => {\n            setFieldValue('multiplier', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"multiplier\"\n                type=\"text\"\n                label={localize('Multiplier')}\n                autoComplete=\"off\"\n                error={touched.multiplier && errors.multiplier}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={multiplierErrorHandler}\n                maxLength={getMaxLength(values.multiplier, 4)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst StopLossLevelField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    stopLossLevelErrorHandler,\n}: FieldsType<StopLossLevelFieldProps>) => (\n    <Field\n        name=\"stopLossLevel\"\n        value={values.stopLossLevel}\n        onChange={(value) => {\n            setFieldValue('stopLossLevel', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"stopLossLevel\"\n                type=\"text\"\n                value={values.stopLossLevel}\n                label={localize('Stop loss level')}\n                autoComplete=\"off\"\n                error={touched.stopLossLevel && errors.stopLossLevel}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={stopLossLevelErrorHandler}\n                maxLength={getMaxLength(values.stopLossLevel, 15)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst StakeField = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    stakeErrorHandler,\n}: FieldsType<StakeFieldProps>) => (\n    <Field\n        name=\"stake\"\n        value={values.stake}\n        onChange={set_field_value_stake_change_handler(setFieldValue)}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"stake\"\n                type=\"text\"\n                label={localize('Stake')}\n                autoComplete=\"off\"\n                error={touched.stake && errors.stake}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={stakeErrorHandler}\n                maxLength={getMaxLength(values.stake, 15)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst StakeFieldWithValue = ({\n    values,\n    setFieldValue,\n    touched,\n    errors,\n    handleBlur,\n    stakeErrorHandler,\n}: FieldsType<StakeFieldProps>) => (\n    <Field\n        name=\"stake\"\n        value={values.stake}\n        onChange={(value) => {\n            setFieldValue('stake', value)\n        }}\n    >\n        {({ field }) => (\n            <Input\n                {...field}\n                id=\"stake\"\n                type=\"text\"\n                value={values.stake}\n                label={localize('Stake')}\n                autoComplete=\"off\"\n                error={touched.stake && errors.stake}\n                onBlur={handleBlur}\n                data-lpignore=\"true\"\n                handleError={stakeErrorHandler}\n                maxLength={getMaxLength(values.stake, 15)}\n                background=\"white\"\n            />\n        )}\n    </Field>\n)\n\nconst direction_down_click_handler = (onSubTabClick, setFieldValue) => () => {\n    onSubTabClick('Down')\n    setFieldValue('direction', 'Down')\n}\n\nconst take_profit_amount_click_handler = (setFieldValue) => (value) => {\n    setFieldValue('takeProfitAmount', value)\n}\n\nconst set_field_value_stake_change_handler = (setFieldValue) => (value) => {\n    setFieldValue('stake', value)\n}\n\nconst take_profit_level_change_handler = (setFieldValue) => (value) => {\n    setFieldValue('takeProfitLevel', value)\n}\n\nconst PnlMultipliersCalculator = () => {\n    const query = graphql`\n        query {\n            stop_loss_level_up_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-up-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_level_up_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-level-up-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_amount_down_formula: file(\n                relativePath: { eq: \"trade-tools/stop-loss-amount-down-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            stop_loss_amount_down_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/stop-loss-amount-down-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_down_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-down-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_level_down_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-level-down-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_amount_up_formula: file(\n                relativePath: { eq: \"trade-tools/take-profit-amount-up-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            take_profit_amount_up_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/take-profit-amount-up-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n    const data = useStaticQuery(query)\n\n    const [tab, setTab] = useState('Level')\n    const [sub_tab, setSubTab] = useState('Up')\n\n    const onTabClick = (t) => setTab(t)\n    const onSubTabClick = (t) => setSubTab(t)\n\n    const mainAssetPriceErrorHandler =\n        (setFieldValue, setFieldError, setFieldTouched) => (current_input) => {\n            setFieldValue('assetPrice', '', false)\n            setFieldError('assetPrice', '')\n            setFieldTouched('assetPrice', false, false)\n            current_input.focus()\n        }\n\n    const mainMultiplierErrorHandler =\n        (setFieldValue, setFieldError, setFieldTouched) => (current_input) => {\n            setFieldValue('multiplier', '', false)\n            setFieldError('multiplier', '')\n            setFieldTouched('multiplier', false, false)\n            current_input.focus()\n        }\n\n    const mainCommissionErrorHandler =\n        (setFieldValue, setFieldError, setFieldTouched) => (current_input) => {\n            setFieldValue('commission', '', false)\n            setFieldError('commission', '')\n            setFieldTouched('commission', false, false)\n            current_input.focus()\n        }\n\n    const mainStakeErrorHandler =\n        (setFieldValue, setFieldError, setFieldTouched) => (current_input) => {\n            setFieldValue('stake', '', false)\n            setFieldError('stake', '')\n            setFieldTouched('stake', false, false)\n            current_input.focus()\n        }\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools/\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('PnL for multipliers')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our profit and loss calculator for multipliers helps to determine the stop loss and/or take profit level in your trades to minimise losses and maximise gains.',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector active={tab === 'Level'} onClick={() => onTabClick('Level')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Level')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Amount'} onClick={() => onTabClick('Amount')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Amount')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                {tab === 'Level' ? (\n                    <ContentContainer mb=\"4.0rem\">\n                        <FormWrapper>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    direction: 'Up',\n                                    stopLossLevelOutput: 0,\n                                    takeProfitLevelOutput: 0,\n                                    takeProfitAmount: '',\n                                    stopLossAmount: '',\n                                    assetPrice: '',\n                                    commission: '',\n                                    stake: '',\n                                    multiplier: '',\n                                }}\n                                validate={resetValidationPnlMultipliersLevel}\n                                onSubmit={(values, { setFieldValue }) => {\n                                    setFieldValue(\n                                        'takeProfitLevelOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(values, 'getTakeProfitLevelUp')\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getTakeProfitLevelDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'stopLossLevelOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(values, 'getStopLossLevelUp')\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getStopLossLevelDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'assetPrice',\n                                        numberSubmitFormat(values.assetPrice),\n                                    )\n                                    setFieldValue(\n                                        'commission',\n                                        numberSubmitFormat(values.commission),\n                                    )\n                                    setFieldValue('stake', numberSubmitFormat(values.stake))\n                                    setFieldValue(\n                                        'multiplier',\n                                        numberSubmitFormat(values.multiplier),\n                                    )\n                                    setFieldValue(\n                                        'takeProfitAmount',\n                                        numberSubmitFormat(values.takeProfitAmount),\n                                    )\n                                    setFieldValue(\n                                        'stopLossAmount',\n                                        numberSubmitFormat(values.stopLossAmount),\n                                    )\n                                }}\n                            >\n                                {({\n                                    values,\n                                    setFieldValue,\n                                    handleBlur,\n                                    errors,\n                                    touched,\n                                    setFieldError,\n                                    setFieldTouched,\n                                    isValid,\n                                    dirty,\n                                }) => {\n                                    const assetPriceErrorHandler = mainAssetPriceErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    const multiplierErrorHandler = mainMultiplierErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    const commissionErrorHandler = mainCommissionErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    const takeProfitAmountErrorHandler = (current_input) => {\n                                        setFieldValue('takeProfitAmount', '', false)\n                                        setFieldError('takeProfitAmount', '')\n                                        setFieldTouched('takeProfitAmount', false, false)\n                                        current_input.focus()\n                                    }\n\n                                    const stopLossAmountErrorHandler = (current_input) => {\n                                        setFieldValue('stopLossAmount', '', false)\n                                        setFieldError('stopLossAmount', '')\n                                        setFieldTouched('stopLossAmount', false, false)\n                                        current_input.focus()\n                                    }\n\n                                    const stakeErrorHandler = mainStakeErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    return (\n                                        <>\n                                            <Show.Desktop max_width=\"mobileL\">\n                                                <CalculatorForm>\n                                                    <CalculatorHeader>\n                                                        <Flex>\n                                                            <Flex fd=\"column\" mr=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {\n                                                                            values.takeProfitLevelOutput\n                                                                        }\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossLevelOutput}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n                                                    </CalculatorHeader>\n\n                                                    <CalculatorBody>\n                                                        <CalculatorLabel>\n                                                            {localize('Direction')}\n                                                        </CalculatorLabel>\n                                                        <Flex\n                                                            mb=\"3rem\"\n                                                            mt=\"1rem\"\n                                                            jc=\"space-between\"\n                                                            tablet={{ height: 'unset' }}\n                                                        >\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Up'}\n                                                                onClick={() => {\n                                                                    onSubTabClick('Up')\n                                                                    setFieldValue('direction', 'Up')\n                                                                }}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Up')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Down'}\n                                                                disabled={sub_tab === 'Down'}\n                                                                onClick={direction_down_click_handler(\n                                                                    onSubTabClick,\n                                                                    setFieldValue,\n                                                                )}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Down')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                        </Flex>\n                                                        <Flex jc=\"space-between\" mb=\"17px\">\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <AssetPriceField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        assetPriceErrorHandler={\n                                                                            assetPriceErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <CommissionField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        commissionErrorHandler={\n                                                                            commissionErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex jc=\"space-between\" mb=\"17px\">\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <StakeField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        stakeErrorHandler={\n                                                                            stakeErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <Field\n                                                                        name=\"takeProfitAmount\"\n                                                                        value={\n                                                                            values.takeProfitAmount\n                                                                        }\n                                                                        onChange={take_profit_amount_click_handler(\n                                                                            setFieldValue,\n                                                                        )}\n                                                                    >\n                                                                        {({ field }) => (\n                                                                            <Input\n                                                                                {...field}\n                                                                                id=\"takeProfitAmount\"\n                                                                                type=\"text\"\n                                                                                label={localize(\n                                                                                    'Take profit amount',\n                                                                                )}\n                                                                                autoComplete=\"off\"\n                                                                                error={\n                                                                                    touched.takeProfitAmount &&\n                                                                                    errors.takeProfitAmount\n                                                                                }\n                                                                                onBlur={handleBlur}\n                                                                                data-lpignore=\"true\"\n                                                                                handleError={\n                                                                                    takeProfitAmountErrorHandler\n                                                                                }\n                                                                                maxLength={getMaxLength(\n                                                                                    values.takeProfitAmount,\n                                                                                    15,\n                                                                                )}\n                                                                                background=\"white\"\n                                                                            />\n                                                                        )}\n                                                                    </Field>\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex jc=\"space-between\">\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <MultiplierField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        multiplierErrorHandler={\n                                                                            multiplierErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <StopLossAmountField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        stopLossAmountErrorHandler={\n                                                                            stopLossAmountErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex mt=\"1.5rem\">\n                                                            <CalculateButton\n                                                                secondary\n                                                                type=\"submit\"\n                                                                disabled={!isValid || !dirty}\n                                                            >\n                                                                {localize('Calculate')}\n                                                            </CalculateButton>\n                                                        </Flex>\n                                                    </CalculatorBody>\n                                                </CalculatorForm>\n                                            </Show.Desktop>\n\n                                            <Show.Mobile min_width=\"mobileL\">\n                                                <CalculatorForm>\n                                                    <CalculatorHeader>\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mb=\"16px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {\n                                                                            values.takeProfitLevelOutput\n                                                                        }\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss level')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {values.stopLossLevelOutput}\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n                                                    </CalculatorHeader>\n\n                                                    <CalculatorBody>\n                                                        <CalculatorLabel>\n                                                            {localize('Direction')}\n                                                        </CalculatorLabel>\n                                                        <Flex\n                                                            mb=\"3rem\"\n                                                            mt=\"1rem\"\n                                                            jc=\"space-between\"\n                                                            tablet={{ height: 'unset' }}\n                                                        >\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Up'}\n                                                                onClick={() => {\n                                                                    onSubTabClick('Up')\n                                                                }}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Up')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Down'}\n                                                                disabled={sub_tab === 'Down'}\n                                                                onClick={direction_down_click_handler(\n                                                                    onSubTabClick,\n                                                                    setFieldValue,\n                                                                )}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Down')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                        </Flex>\n                                                        <InputGroup>\n                                                            <AssetPriceField\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                assetPriceErrorHandler={\n                                                                    assetPriceErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <StakeFieldWithValue\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                stakeErrorHandler={\n                                                                    stakeErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <MultiplierFieldWithoutValue\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                multiplierErrorHandler={\n                                                                    multiplierErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <CommissionField\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                commissionErrorHandler={\n                                                                    commissionErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <Field\n                                                                name=\"takeProfitAmount\"\n                                                                value={values.takeProfitAmount}\n                                                                onChange={take_profit_amount_click_handler(\n                                                                    setFieldValue,\n                                                                )}\n                                                            >\n                                                                {({ field }) => (\n                                                                    <Input\n                                                                        {...field}\n                                                                        id=\"takeProfitAmount\"\n                                                                        type=\"text\"\n                                                                        value={\n                                                                            values.takeProfitAmount\n                                                                        }\n                                                                        label={localize(\n                                                                            'Take profit amount',\n                                                                        )}\n                                                                        autoComplete=\"off\"\n                                                                        error={\n                                                                            touched.takeProfitAmount &&\n                                                                            errors.takeProfitAmount\n                                                                        }\n                                                                        onBlur={handleBlur}\n                                                                        data-lpignore=\"true\"\n                                                                        handleError={\n                                                                            takeProfitAmountErrorHandler\n                                                                        }\n                                                                        maxLength={getMaxLength(\n                                                                            values.takeProfitAmount,\n                                                                            15,\n                                                                        )}\n                                                                        background=\"white\"\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <StopLossAmountField\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                stopLossAmountErrorHandler={\n                                                                    stopLossAmountErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n\n                                                        <Flex mt=\"1.5rem\">\n                                                            <CalculateButton\n                                                                secondary\n                                                                type=\"submit\"\n                                                                disabled={!isValid || !dirty}\n                                                            >\n                                                                {localize('Calculate')}\n                                                            </CalculateButton>\n                                                        </Flex>\n                                                    </CalculatorBody>\n                                                </CalculatorForm>\n                                            </Show.Mobile>\n                                        </>\n                                    )\n                                }}\n                            </Formik>\n                        </FormWrapper>\n\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('How to calculate stop loss and/or take profit level')}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit level for a contract on DTrader is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level in the Up direction = asset price × {(stop loss OR take profit amount + commission) ÷ (stake × multiplier) + 1}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit level in the Down direction = asset price × {(-stop loss OR take profit amount - commission) ÷ (stake × multiplier) + 1}</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'This helps you to set the stop loss and/or take profit level when the asset price moves in Up or Down direction.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                {localize('Example calculation')}\n                            </Header>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Stop loss level in Up direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the stop loss level when you open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a stop loss amount of 7.54 USD in Up direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_up_formula}\n                                            alt={localize('stop loss level up formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_level_up_formula_mobile}\n                                            alt={localize('stop loss level up formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mb=\"1.6rem\" mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your stop loss level at <0>3351.46</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Take profit level in Down direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the take profit level when you open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a take profit amount of 7.54 USD in Down direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_down_formula}\n                                            alt={localize('take profit level down formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_level_down_formula_mobile}\n                                            alt={localize('take profit level down formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your take profit level at <0>3350.11</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                <StyledLinkButton\n                                    secondary=\"true\"\n                                    type=\"deriv_app\"\n                                    external=\"true\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {localize('Go to Dtrader')}\n                                </StyledLinkButton>\n                            </LinkWrapper>\n                        </RightContent>\n                    </ContentContainer>\n                ) : (\n                    <ContentContainer key={tab} mb=\"4.0rem\">\n                        <FormWrapper>\n                            <Formik\n                                enableReinitialize\n                                initialValues={{\n                                    direction: 'Up',\n                                    pnlMarginSymbol: 'USD',\n                                    stopLossAmountOutput: 0,\n                                    takeProfitAmountOutput: 0,\n                                    takeProfitLevel: '',\n                                    stopLossLevel: '',\n                                    assetPrice: '',\n                                    commission: '',\n                                    stake: '',\n                                    multiplier: '',\n                                }}\n                                validate={resetValidationPnlMultipliersAmount}\n                                onSubmit={(values, { setFieldValue }) => {\n                                    setFieldValue(\n                                        'takeProfitAmountOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(\n                                                  values,\n                                                  'getTakeProfitAmountUp',\n                                              )\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getTakeProfitAmountDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'stopLossAmountOutput',\n                                        sub_tab === 'Up'\n                                            ? getPnlMultiplierCommon(values, 'getStopLossAmountUp')\n                                            : getPnlMultiplierCommon(\n                                                  values,\n                                                  'getStopLossAmountDown',\n                                              ),\n                                    )\n                                    setFieldValue(\n                                        'assetPrice',\n                                        numberSubmitFormat(values.assetPrice),\n                                    )\n                                    setFieldValue(\n                                        'commission',\n                                        numberSubmitFormat(values.commission),\n                                    )\n                                    setFieldValue('stake', numberSubmitFormat(values.stake))\n                                    setFieldValue(\n                                        'multiplier',\n                                        numberSubmitFormat(values.multiplier),\n                                    )\n                                    setFieldValue(\n                                        'takeProfitLevel',\n                                        numberSubmitFormat(values.takeProfitLevel),\n                                    )\n                                    setFieldValue(\n                                        'stopLossLevel',\n                                        numberSubmitFormat(values.stopLossLevel),\n                                    )\n                                }}\n                            >\n                                {({\n                                    values,\n                                    setFieldValue,\n                                    handleBlur,\n                                    errors,\n                                    touched,\n                                    setFieldError,\n                                    setFieldTouched,\n                                    isValid,\n                                    dirty,\n                                }) => {\n                                    const assetPriceErrorHandler = mainAssetPriceErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    const multiplierErrorHandler = mainMultiplierErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    const commissionErrorHandler = mainCommissionErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    const takeProfitLevelErrorHandler = (current_input) => {\n                                        setFieldValue('takeProfitLevel', '', false)\n                                        setFieldError('takeProfitLevel', '')\n                                        setFieldTouched('takeProfitLevel', false, false)\n                                        current_input.focus()\n                                    }\n\n                                    const stopLossLevelErrorHandler = (current_input) => {\n                                        setFieldValue('stopLossLevel', '', false)\n                                        setFieldError('stopLossLevel', '')\n                                        setFieldTouched('stopLossLevel', false, false)\n                                        current_input.focus()\n                                    }\n\n                                    const stakeErrorHandler = mainStakeErrorHandler(\n                                        setFieldValue,\n                                        setFieldError,\n                                        setFieldTouched,\n                                    )\n\n                                    return (\n                                        <>\n                                            <Show.Desktop max_width=\"mobileL\">\n                                                <CalculatorForm>\n                                                    <CalculatorHeader>\n                                                        <Flex>\n                                                            <Flex fd=\"column\" mr=\"24px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit amount')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {\n                                                                            values.takeProfitAmountOutput\n                                                                        }\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss amount')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {\n                                                                            values.stopLossAmountOutput\n                                                                        }\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n                                                    </CalculatorHeader>\n\n                                                    <CalculatorBody>\n                                                        <CalculatorLabel>\n                                                            {localize('Direction')}\n                                                        </CalculatorLabel>\n                                                        <Flex\n                                                            mb=\"3rem\"\n                                                            mt=\"1rem\"\n                                                            jc=\"space-between\"\n                                                            tablet={{ height: 'unset' }}\n                                                        >\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Up'}\n                                                                onClick={() => {\n                                                                    onSubTabClick('Up')\n                                                                    setFieldValue('direction', 'Up')\n                                                                }}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Up')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Down'}\n                                                                disabled={sub_tab === 'Down'}\n                                                                onClick={direction_down_click_handler(\n                                                                    onSubTabClick,\n                                                                    setFieldValue,\n                                                                )}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Down')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                        </Flex>\n                                                        <Flex jc=\"space-between\" mb=\"17px\">\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <AssetPriceField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        assetPriceErrorHandler={\n                                                                            assetPriceErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <CommissionField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        commissionErrorHandler={\n                                                                            commissionErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex jc=\"space-between\" mb=\"17px\">\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <StakeField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        stakeErrorHandler={\n                                                                            stakeErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <Field\n                                                                        name=\"takeProfitLevel\"\n                                                                        value={\n                                                                            values.takeProfitLevel\n                                                                        }\n                                                                        onChange={take_profit_level_change_handler(\n                                                                            setFieldValue,\n                                                                        )}\n                                                                    >\n                                                                        {({ field }) => (\n                                                                            <Input\n                                                                                {...field}\n                                                                                id=\"takeProfitLevel\"\n                                                                                type=\"text\"\n                                                                                label={localize(\n                                                                                    'Take profit level',\n                                                                                )}\n                                                                                autoComplete=\"off\"\n                                                                                error={\n                                                                                    touched.takeProfitLevel &&\n                                                                                    errors.takeProfitLevel\n                                                                                }\n                                                                                onBlur={handleBlur}\n                                                                                data-lpignore=\"true\"\n                                                                                handleError={\n                                                                                    takeProfitLevelErrorHandler\n                                                                                }\n                                                                                maxLength={getMaxLength(\n                                                                                    values.takeProfitLevel,\n                                                                                    15,\n                                                                                )}\n                                                                                background=\"white\"\n                                                                            />\n                                                                        )}\n                                                                    </Field>\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex jc=\"space-between\">\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <MultiplierField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        multiplierErrorHandler={\n                                                                            multiplierErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                            <Flex fd=\"column\" width=\"23.4rem\">\n                                                                <PnLInputGroup>\n                                                                    <StopLossLevelField\n                                                                        values={values}\n                                                                        setFieldValue={\n                                                                            setFieldValue\n                                                                        }\n                                                                        touched={touched}\n                                                                        errors={errors}\n                                                                        handleBlur={handleBlur}\n                                                                        stopLossLevelErrorHandler={\n                                                                            stopLossLevelErrorHandler\n                                                                        }\n                                                                    />\n                                                                </PnLInputGroup>\n                                                            </Flex>\n                                                        </Flex>\n\n                                                        <Flex mt=\"1.5rem\">\n                                                            <CalculateButton\n                                                                secondary\n                                                                type=\"submit\"\n                                                                disabled={!isValid || !dirty}\n                                                            >\n                                                                {localize('Calculate')}\n                                                            </CalculateButton>\n                                                        </Flex>\n                                                    </CalculatorBody>\n                                                </CalculatorForm>\n                                            </Show.Desktop>\n\n                                            <Show.Mobile min_width=\"mobileL\">\n                                                <CalculatorForm>\n                                                    <CalculatorHeader>\n                                                        <Flex fd=\"column\">\n                                                            <Flex fd=\"column\" mb=\"16px\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Take profit amount')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {\n                                                                            values.takeProfitAmountOutput\n                                                                        }\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                            <Flex fd=\"column\">\n                                                                <CalculatorLabel htmlFor=\"message\">\n                                                                    {localize('Stop loss amount')}\n                                                                </CalculatorLabel>\n                                                                <PnLCalculatorOutputContainer>\n                                                                    <PnLCalculatorOutputField>\n                                                                        {\n                                                                            values.stopLossAmountOutput\n                                                                        }\n                                                                    </PnLCalculatorOutputField>\n                                                                    <PnLCalculatorOutputSymbol>\n                                                                        {values.pnlMarginSymbol}\n                                                                    </PnLCalculatorOutputSymbol>\n                                                                </PnLCalculatorOutputContainer>\n                                                            </Flex>\n                                                        </Flex>\n                                                    </CalculatorHeader>\n\n                                                    <CalculatorBody>\n                                                        <CalculatorLabel>\n                                                            {localize('Direction')}\n                                                        </CalculatorLabel>\n                                                        <Flex\n                                                            mb=\"3rem\"\n                                                            mt=\"1rem\"\n                                                            jc=\"space-between\"\n                                                            tablet={{ height: 'unset' }}\n                                                        >\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Up'}\n                                                                onClick={() => {\n                                                                    onSubTabClick('Up')\n                                                                }}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Up')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                            <PnlCalculatorTabItem\n                                                                active={sub_tab === 'Down'}\n                                                                disabled={sub_tab === 'Down'}\n                                                                onClick={direction_down_click_handler(\n                                                                    onSubTabClick,\n                                                                    setFieldValue,\n                                                                )}\n                                                            >\n                                                                <Text align=\"center\">\n                                                                    {localize('Down')}\n                                                                </Text>\n                                                            </PnlCalculatorTabItem>\n                                                        </Flex>\n                                                        <InputGroup>\n                                                            <AssetPriceField\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                assetPriceErrorHandler={\n                                                                    assetPriceErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <StakeFieldWithValue\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                stakeErrorHandler={\n                                                                    stakeErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <MultiplierFieldWithoutValue\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                multiplierErrorHandler={\n                                                                    multiplierErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <CommissionField\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                commissionErrorHandler={\n                                                                    commissionErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <Field\n                                                                name=\"takeProfitLevel\"\n                                                                value={values.takeProfitLevel}\n                                                                onChange={take_profit_level_change_handler(\n                                                                    setFieldValue,\n                                                                )}\n                                                            >\n                                                                {({ field }) => (\n                                                                    <Input\n                                                                        {...field}\n                                                                        id=\"takeProfitLevel\"\n                                                                        type=\"text\"\n                                                                        value={\n                                                                            values.takeProfitLevel\n                                                                        }\n                                                                        label={localize(\n                                                                            'Take profit level',\n                                                                        )}\n                                                                        autoComplete=\"off\"\n                                                                        error={\n                                                                            touched.takeProfitLevel &&\n                                                                            errors.takeProfitLevel\n                                                                        }\n                                                                        onBlur={handleBlur}\n                                                                        data-lpignore=\"true\"\n                                                                        handleError={\n                                                                            takeProfitLevelErrorHandler\n                                                                        }\n                                                                        maxLength={getMaxLength(\n                                                                            values.takeProfitLevel,\n                                                                            15,\n                                                                        )}\n                                                                        background=\"white\"\n                                                                    />\n                                                                )}\n                                                            </Field>\n                                                        </InputGroup>\n                                                        <InputGroup>\n                                                            <StopLossLevelField\n                                                                values={values}\n                                                                setFieldValue={setFieldValue}\n                                                                touched={touched}\n                                                                errors={errors}\n                                                                handleBlur={handleBlur}\n                                                                stopLossLevelErrorHandler={\n                                                                    stopLossLevelErrorHandler\n                                                                }\n                                                            />\n                                                        </InputGroup>\n\n                                                        <Flex mt=\"1.5rem\">\n                                                            <CalculateButton\n                                                                secondary\n                                                                type=\"submit\"\n                                                                disabled={!isValid || !dirty}\n                                                            >\n                                                                {localize('Calculate')}\n                                                            </CalculateButton>\n                                                        </Flex>\n                                                    </CalculatorBody>\n                                                </CalculatorForm>\n                                            </Show.Mobile>\n                                        </>\n                                    )\n                                }}\n                            </Formik>\n                        </FormWrapper>\n\n                        <RightContent>\n                            <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                {localize('How to calculate stop loss and/or take profit amount')}\n                            </Header>\n\n                            <Text mb=\"8px\">\n                                {localize(\n                                    'The stop loss and/or take profit amount for a contract on DTrader is calculated based on the formula:',\n                                )}\n                            </Text>\n                            <Text mb=\"8px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit amount in the Up direction = Max [{stake × ((stop loss OR take profit level - asset price) ÷ asset price × multiplier) - commission}, -stake]</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"16px\">\n                                <Localize\n                                    translate_text=\"<0>Stop loss and/or take profit amount in the Down direction = Max [{stake × (-(stop loss OR take profit level - asset price) ÷ asset price × multiplier) - commission}, -stake]</0>\"\n                                    components={[<strong key={0} />]}\n                                />\n                            </Text>\n                            <Text mb=\"40px\">\n                                {localize(\n                                    'This helps you to set the stop loss and/or take profit level when the asset price moves in Up or Down direction.',\n                                )}\n                            </Text>\n\n                            <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                {localize('Example calculation')}\n                            </Header>\n\n                            <Accordion has_single_state>\n                                <AccordionItem\n                                    header={localize('Take profit amount in Up direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the take profit amount when you want to open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a take profit level of 3400 in Up direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_amount_up_formula}\n                                            alt={localize('take profit amount up formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.take_profit_amount_up_formula_mobile}\n                                            alt={localize('take profit amount up formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mb=\"1.6rem\" mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your take profit level at <0>6.83 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n\n                                <AccordionItem\n                                    header={localize('Stop loss amount in Down direction')}\n                                    header_style={header_style}\n                                    style={item_style}\n                                    plus\n                                >\n                                    <Text mb=\"16px\">\n                                        {localize(\n                                            'Let’s say you want to calculate the stop loss amount when you want to open a position for Volatility 100 Index priced at 3376.24 USD with a stake amount of 10 USD, a multiplier value of x100, and a stop loss level of 3400 in Down direction.',\n                                        )}\n                                    </Text>\n                                    <Show.Desktop max_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_amount_down_formula}\n                                            alt={localize('stop loss amount down formula')}\n                                        />\n                                    </Show.Desktop>\n                                    <Show.Mobile min_width=\"mobileL\">\n                                        <QueryImage\n                                            data={data.stop_loss_amount_down_formula_mobile}\n                                            alt={localize('stop loss amount down formula')}\n                                        />\n                                    </Show.Mobile>\n                                    <FormulaText>\n                                        <StyledOl>\n                                            <li>\n                                                <span>\n                                                    <Localize translate_text=\"The commission is automatically calculated based on your stake, symbol, and the multiplier you choose. Its value is directly available on DTrader.\" />\n                                                </span>\n                                            </li>\n                                        </StyledOl>\n                                    </FormulaText>\n\n                                    <Text mt=\"1.6rem\">\n                                        <Localize\n                                            translate_text=\"So in this scenario, you would set your stop loss amount at <0>-7.23 USD</0>.\"\n                                            components={[<strong key={0} />]}\n                                        />\n                                    </Text>\n                                </AccordionItem>\n                            </Accordion>\n\n                            <LinkWrapper height=\"auto\">\n                                <StyledLinkButton\n                                    secondary=\"true\"\n                                    type=\"deriv_app\"\n                                    external=\"true\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    {localize('Go to Dtrader')}\n                                </StyledLinkButton>\n                            </LinkWrapper>\n                        </RightContent>\n                    </ContentContainer>\n                )}\n            </StyledSection>\n        </>\n    )\n}\n\nexport default PnlMultipliersCalculator\n","import React from 'react'\nimport { Hero, StyledHeader } from '../common/_style'\nimport PnLMultipliersCalculatorSection from './_pnl_multipliers_calculator'\nimport { Container, SEO } from 'components/containers'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst PnLMultipliersCalculator = () => {\n    return (\n        <Layout>\n            <SEO\n                title={localize('PnL Multipliers Calculator')}\n                description={localize('PnL Multipliers Calculator')}\n            />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <StyledHeader as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Stop loss and/or take profit calculator for multipliers')}\n                    </StyledHeader>\n                </Container>\n            </Hero>\n            <PnLMultipliersCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(PnLMultipliersCalculator)\n"],"names":["CommissionField","values","setFieldValue","touched","errors","handleBlur","commissionErrorHandler","name","value","commission","onChange","field","id","type","label","localize","autoComplete","error","onBlur","handleError","maxLength","getMaxLength","background","StopLossAmountField","stopLossAmountErrorHandler","stopLossAmount","AssetPriceField","assetPriceErrorHandler","assetPrice","MultiplierField","multiplierErrorHandler","multiplier","MultiplierFieldWithoutValue","StopLossLevelField","stopLossLevelErrorHandler","stopLossLevel","StakeField","stakeErrorHandler","stake","set_field_value_stake_change_handler","StakeFieldWithValue","direction_down_click_handler","onSubTabClick","take_profit_amount_click_handler","take_profit_level_change_handler","data","useStaticQuery","useState","tab","setTab","sub_tab","setSubTab","onTabClick","t","mainAssetPriceErrorHandler","setFieldError","setFieldTouched","current_input","focus","mainMultiplierErrorHandler","mainCommissionErrorHandler","mainStakeErrorHandler","jc","ai","to","color","src","RightArrow","alt","height","width","style","margin","direction","as","align","weight","mt","mb","tablet","active","onClick","size","enableReinitialize","initialValues","stopLossLevelOutput","takeProfitLevelOutput","takeProfitAmount","validate","resetValidationPnlMultipliersLevel","onSubmit","getPnlMultiplierCommon","numberSubmitFormat","isValid","dirty","takeProfitAmountErrorHandler","max_width","fd","mr","htmlFor","pnlMarginSymbol","disabled","secondary","min_width","translate_text","components","key","has_single_state","header","header_style","item_style","plus","stop_loss_level_up_formula","stop_loss_level_up_formula_mobile","take_profit_level_down_formula","take_profit_level_down_formula_mobile","external","target","rel","stopLossAmountOutput","takeProfitAmountOutput","takeProfitLevel","resetValidationPnlMultipliersAmount","takeProfitLevelErrorHandler","take_profit_amount_up_formula","take_profit_amount_up_formula_mobile","stop_loss_amount_down_formula","stop_loss_amount_down_formula_mobile","WithIntl","title","description"],"sourceRoot":""}