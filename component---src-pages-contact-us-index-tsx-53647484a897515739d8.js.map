{"version":3,"file":"component---src-pages-contact-us-index-tsx-53647484a897515739d8.js","mappings":"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","sources":["webpack://deriv-com/./src/components/hooks/use-open-live-chat-redirection.js","webpack://deriv-com/./src/pages/contact_us/_contact-ways.tsx","webpack://deriv-com/./src/pages/contact_us/index.tsx"],"sourcesContent":["import React from 'react'\nimport { redirectOpenLiveChatBox } from 'common/utility'\n\nexport const useOpenLiveChat = (props) => {\n    let script_timeout = null\n    const [is_mounted, setMounted] = React.useState(false)\n    React.useEffect(() => {\n        if (is_mounted) {\n            script_timeout = setTimeout(() => {\n                redirectOpenLiveChatBox(props)\n            }, 2000)\n        }\n        setMounted(true)\n        return () => {\n            clearTimeout(script_timeout)\n        }\n    }, [is_mounted])\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Header, QueryImage } from 'components/elements'\nimport { SectionContainer, Container, Flex } from 'components/containers'\nimport { Localize } from 'components/localization'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device'\n\nconst query = graphql`\n    query {\n        community: file(relativePath: { eq: \"community.png\" }) {\n            ...fadeIn\n        }\n        help: file(relativePath: { eq: \"help.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst StyledLinkButton = styled(LinkButton)`\n    border-radius: 4px;\n\n    @media ${device.tabletL} {\n        font-size: 14px;\n        padding: 12px 16px;\n    }\n`\nconst contactways = [\n    {\n        name: 'community',\n        header: <Localize translate_text=\"Ask everyone\" />,\n        text: <Localize translate_text=\"Our Deriv support community can help you find answers.\" />,\n        image: 'community',\n        img_alt: \"Deriv's support community\",\n        button: (\n            <StyledLinkButton\n                secondary=\"true\"\n                to=\"\"\n                type=\"community\"\n                external=\"true\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                <Localize translate_text=\"Ask the community\" />\n            </StyledLinkButton>\n        ),\n    },\n    {\n        name: 'help',\n        header: <Localize translate_text=\"Weâ€™re here to help\" />,\n        text: (\n            <Localize translate_text=\"See frequently asked questions on popular topics to get quick answers.\" />\n        ),\n        image: 'help',\n        img_alt: \"Deriv's help centre\",\n        button: (\n            <StyledLinkButton secondary=\"true\" to=\"/help-centre/\">\n                <Localize translate_text=\"Visit our Help centre\" />\n            </StyledLinkButton>\n        ),\n    },\n]\n\nconst GridLayout = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2.4rem;\n\n    @media ${device.tablet} {\n        grid-template-columns: 1fr;\n        grid-gap: 40px;\n    }\n`\n\nconst ImgWrapper = styled.div`\n    width: 28.2rem;\n\n    @media ${device.mobileL} {\n        width: 100%;\n    }\n`\n\nconst ContactWrapper = styled.article`\n    width: 48.6rem;\n    height: 100%;\n    min-height: 22rem;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    @media ${device.tabletL} {\n        width: 100%;\n        max-width: 55rem;\n        margin-top: 0;\n\n        ${Flex} {\n            padding-bottom: 2rem;\n            align-items: center;\n        }\n    }\n\n    @media ${device.tablet} {\n        h4 {\n            height: auto;\n        }\n    }\n`\n\nconst ContactWays = () => {\n    const data = useStaticQuery(query)\n    return (\n        <SectionContainer padding=\"4rem 0\" background=\"var(--color-grey-25)\">\n            <Container>\n                <GridLayout>\n                    {contactways.map((item, idx) => {\n                        return (\n                            <ContactWrapper key={idx}>\n                                <ImgWrapper>\n                                    <QueryImage\n                                        data={data[item.image]}\n                                        alt={item.img_alt}\n                                        width=\"100%\"\n                                        loading=\"eager\"\n                                    />\n                                </ImgWrapper>\n\n                                <Header mt=\"2.4rem\" as=\"h3\" type=\"section-title\" align=\"center\">\n                                    {item.header}\n                                </Header>\n                                <Header\n                                    as=\"h4\"\n                                    type=\"sub-section-title\"\n                                    weight=\"normal\"\n                                    mb=\"2.4rem\"\n                                    mt=\"0.8rem\"\n                                    align=\"center\"\n                                >\n                                    {item.text}\n                                </Header>\n                                {item.button}\n                            </ContactWrapper>\n                        )\n                    })}\n                </GridLayout>\n            </Container>\n        </SectionContainer>\n    )\n}\n\nexport default ContactWays\n","import React from 'react'\nimport styled from 'styled-components'\nimport Loadable from '@loadable/component'\nimport ContactWays from './_contact-ways'\nimport device from 'themes/device'\nimport { useOpenLiveChat } from 'components/hooks/use-open-live-chat-redirection'\nimport { Header, Text } from 'components/elements'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\nimport { SEO, SectionContainer, Container } from 'components/containers'\nconst Offices = Loadable(() => import('./_offices'))\nconst Affiliates = Loadable(() => import('./_affiliates'))\n\nconst HeroWrapper = styled(Container)`\n    @media ${device.tablet} {\n        ${Header} {\n            font-size: 40px;\n            margin-bottom: 16px;\n        }\n    }\n`\n\nconst StyledText = styled(Text)`\n    max-width: 63.4rem;\n    margin: 1.6rem auto 0;\n    font-size: var(--text-size-m);\n\n    @media ${device.tabletL} {\n        font-size: var(--text-size-sm);\n        margin-top: 0;\n    }\n`\n\nconst ContactUs = () => {\n    /* redirect livechat for en to open live chat popup */\n    /* set true to allow redirection for other lang also*/\n    useOpenLiveChat(true)\n\n    return (\n        <Layout>\n            <SEO\n                title={localize('Contact Us | Online Trading | Deriv.com')}\n                description={localize(\n                    'Have any query or need assistance, check out the details to call our international help desk and our email ID. Feel free to contact us anytime!',\n                )}\n                has_organization_schema\n            />\n            <SectionContainer tablet={{ p: '40px 0' }}>\n                <HeroWrapper fd=\"column\">\n                    <Header align=\"center\" as=\"h1\" type=\"display-title\">\n                        {localize('Contact us')}\n                    </Header>\n                    <StyledText align=\"center\" size=\"var(--text-size-sm)\">\n                        {localize(\"Got questions? Here's how to get answers.\")}\n                    </StyledText>\n                </HeroWrapper>\n            </SectionContainer>\n            <ContactWays />\n            <Offices />\n            <Affiliates />\n        </Layout>\n    )\n}\n\nexport default WithIntl()(ContactUs)\n"],"names":["useOpenLiveChat","props","script_timeout","React","is_mounted","setMounted","setTimeout","redirectOpenLiveChatBox","clearTimeout","StyledLinkButton","styled","LinkButton","device","contactways","name","header","translate_text","text","image","img_alt","button","secondary","to","type","external","target","rel","GridLayout","ImgWrapper","ContactWrapper","Flex","data","useStaticQuery","padding","background","map","item","idx","key","alt","width","loading","mt","as","align","weight","mb","Offices","Loadable","Affiliates","HeroWrapper","Container","Header","StyledText","Text","WithIntl","title","localize","description","has_organization_schema","tablet","p","fd","size"],"sourceRoot":""}